// <auto-generated />
using System;
using ClosetApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClosetApi.Migrations
{
    [DbContext(typeof(ClosetContext))]
    partial class ClosetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClosetApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentCategoryCategoryId");

                    b.Property<int>("ParentId");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ClosetApi.Models.Finish", b =>
                {
                    b.Property<int>("FinishId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentMaterialMaterialId");

                    b.HasKey("FinishId");

                    b.HasIndex("ParentMaterialMaterialId");

                    b.ToTable("Finishes");
                });

            modelBuilder.Entity("ClosetApi.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ClosetApi.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DepthCont");

                    b.Property<double>("DepthMax");

                    b.Property<double>("DepthMin");

                    b.Property<bool>("HeightCont");

                    b.Property<double>("HeightMax");

                    b.Property<double>("HeightMin");

                    b.Property<bool>("WidthCont");

                    b.Property<double>("WidthMax");

                    b.Property<double>("WidthMin");

                    b.HasKey("MeasurementId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("ClosetApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId1");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentProductProductId");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId1");

                    b.HasIndex("ParentProductProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ClosetApi.Models.ProductMaterial", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("MaterialId");

                    b.HasKey("ProductId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ProductMaterial");
                });

            modelBuilder.Entity("ClosetApi.Models.ProductMeasurement", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("MeasurementId");

                    b.HasKey("ProductId", "MeasurementId");

                    b.HasIndex("MeasurementId");

                    b.ToTable("ProductMeasurement");
                });

            modelBuilder.Entity("ClosetApi.Models.Category", b =>
                {
                    b.HasOne("ClosetApi.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryCategoryId");
                });

            modelBuilder.Entity("ClosetApi.Models.Finish", b =>
                {
                    b.HasOne("ClosetApi.Models.Material", "ParentMaterial")
                        .WithMany("Finishes")
                        .HasForeignKey("ParentMaterialMaterialId");
                });

            modelBuilder.Entity("ClosetApi.Models.Product", b =>
                {
                    b.HasOne("ClosetApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId1");

                    b.HasOne("ClosetApi.Models.Product", "ParentProduct")
                        .WithMany("Products")
                        .HasForeignKey("ParentProductProductId");
                });

            modelBuilder.Entity("ClosetApi.Models.ProductMaterial", b =>
                {
                    b.HasOne("ClosetApi.Models.Material", "Material")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClosetApi.Models.Product", "Product")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClosetApi.Models.ProductMeasurement", b =>
                {
                    b.HasOne("ClosetApi.Models.Measurement", "Measurement")
                        .WithMany("ProductMeasurements")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClosetApi.Models.Product", "Product")
                        .WithMany("ProductMeasurements")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
